<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<%-- wSPLDTemplateStructure --%>

<%@ page import="java.util.*,javax.servlet.*,javax.servlet.http.*,zeidon.zView" %>

<%! 

public int DoInputMapping( HttpServletRequest request,
                           HttpSession session,
                           ServletContext application )
{
   String strSID = session.getId( );
   zeidon.zView vAS = (zeidon.zView) session.getAttribute( "ZeidonSubtask" );

   zeidon.zView mSPLDef = new zeidon.zView( strSID );
   zeidon.zView vGridTmp = new zeidon.zView( strSID ); // temp view to grid view
   zeidon.zView vMsgQ = new zeidon.zView( strSID ); // view to Message Queue
   zeidon.zView v = new zeidon.zView( strSID );     // view to Message Queue

   String strError = "";
   String strDateFormat = "";
   String strValue;
   int    iView;
   int    lEntityKey;
   String strEntityKey;
   String strTag;
   String strTemp;
   int    iTableRowCnt;
   String strSuffix;
   int    nRelPos;
   int    nRC = 0;
   int    nMapError = 0;

   nRC = mSPLDef.GetView( strSID, "mSPLDef", vAS );
   if ( nRC > 0 )
   {
      // EditBox: SPLD_Name
      nRC = mSPLDef.CheckExistenceOfEntity( strSID, "SubregPhysicalLabelDef" );
      if ( nRC >= 0 )
      {
         strValue = request.getParameter( "SPLD_Name" );
         nRC = mSPLDef.SetAttributeFromVariable( strSID, "SubregPhysicalLabelDef", "Name",
                                                 strValue, 'S', 0, "", 8 );
         if ( nRC < 0 )
         {
            nMapError = nRC;
            strError += "SPLD_Name" + "\t" + strValue + "\t";
         }
      }

      // Grid: Grid
      iTableRowCnt = 0;

      // We are creating a temp view to the grid view so that if there are 
      // grids on the same window with the same view we do not mess up the 
      // entity positions. 
      vGridTmp.CreateViewFromView( strSID, mSPLDef );
      nRC = vGridTmp.SetCursorFirst( strSID, "DisplayTemplateStatement", "" );
      while ( nRC >= 0 )
      {
         lEntityKey = vGridTmp.GetEntityKey( strSID, "DisplayTemplateStatement" );
         strEntityKey = Integer.toString( lEntityKey );
         iTableRowCnt++;

         strTag = "Select" + strEntityKey;
         strValue = request.getParameter( strTag );
         if ( strValue != null )
            vGridTmp.SetAttributeFromVariable( strSID, "DisplayTemplateStatement", "wSelected", "Y", 'S', 0, "", 0 );
         else
            vGridTmp.SetAttributeFromVariable( strSID, "DisplayTemplateStatement", "wSelected", "", 'S', 0, "", 0 );

         nRC = vGridTmp.SetCursorNext( strSID, "DisplayTemplateStatement", "" );
      }
      vGridTmp.DropView(strSID);
   }

   if ( nMapError < 0 )
   {
      iView = vAS.GetIntegerFromView( strSID );
      vAS.TraceLine( "DoInputMapping ERROR =======>> ", strError );
      nRC = vMsgQ.GetView( strSID, "__MSGQ", vAS );
      if ( nRC > 0 )
      {
         v.CreateViewFromView( strSID, vMsgQ );
         vAS.TraceLine( "DoInputMapping found __MSGQ", "" );
         v.DisplayObjectInstance( strSID );
         vAS.TraceLine( "DoInputMapping __MSGQ View: ", iView );
         nRC = v.SetCursorFirst( strSID, "Task", "Id", iView, "" );
         vAS.TraceLine( "DoInputMapping SetCursorFirst RC: ", nRC );
         if ( nRC == 0 )
         {
            nRC = v.SetCursorFirst( strSID, "QMsg" );
            if ( nRC == 0 )
            {
               vAS.TraceLine( "DoInputMapping found QMsg Entity", "" );
               v.SetAttributeFromVariable( strSID, "QMsg", "Title",
                                           strError, 'S',
                                           strError.length( ) + 1, "", 8 );
            }

            while ( nRC == 0 )
            {
               v.DisplayEntityInstance( strSID, "QMsg" );
               nRC = v.SetCursorNext( strSID, "QMsg" );
               vAS.TraceLine( "DoInputMapping SetCursorNext RC: ", nRC );
            }

            vAS.TraceLine( "DoInputMapping after __MSGQ", "" );
            nRC = 0;
         }

         v.DisplayObjectInstance( strSID );
         v.DropView( strSID );
         nRC = -1;
      }

      return( nRC );
   }

   return( 1 );
}

%>

<%

session = request.getSession( );
String strSessionId = session.getId( );
zeidon.zView vAppSubtask; // view to this subtask
zeidon.zView vMsgQ = new zeidon.zView( strSessionId ); // view to Message Queue
zView vKZXMLPGO = null;
String strLastPage;
short  nRepos = 0;
int bDone;
int nPos = 0;
int nOptRC;
int nRC;

String strActionToProcess;
String strURL;
String strError = "";
String strErrorFlag = "";
String strErrorTitle = "";
String strErrorMsg = "";
String strFocusCtrl = "";
String strBannerName = "";
String strOpenFile = "";
String strOpenPopupWindow = "";
String strPopupWindowSZX = "";
String strPopupWindowSZY = "";
String strDateFormat = "";
String strKeyRole = "";
String strDialogName;
String strWindowName;
String strFunctionCall;
String strNextJSP_Name = "";
String strInputFileName = "";

// Check to see if the Zeidon subtask view already exists.  If not, create
// it and copy it into the application object.
vAppSubtask = (zeidon.zView) session.getAttribute( "ZeidonSubtask" );
if ( vAppSubtask == null )
{
   strURL = response.encodeRedirectURL( "logout.html" );
   response.sendRedirect( strURL );
   return;
}
else
{
   strActionToProcess = (String) request.getParameter( "zAction" );

   if ( vKZXMLPGO == null )
      vKZXMLPGO = new zeidon.zView( strSessionId );

   nRC = vKZXMLPGO.GetView( strSessionId, "KZXMLPGO", vAppSubtask );
   if ( nRC <= 0 )
   {
      vKZXMLPGO.InitWebSessionObject( strSessionId, vAppSubtask, "TestUserID" );
      vKZXMLPGO.SetName( strSessionId, "KZXMLPGO" );
   }

   nRC = vMsgQ.GetView( strSessionId, "__MSGQ", vAppSubtask );
   vAppSubtask.SetDefaultViewForActiveTask( strSessionId, 2 );

   strURL = "";
   bDone = 0;
   nRC = 0;
}

if ( strActionToProcess != null )
{
   if ( vAppSubtask != null )
   {
      // Delete the message object if error on last interation.
      nRC = vMsgQ.GetView( strSessionId, "__MSGQ", vAppSubtask );
      if ( nRC > 0 )
         vMsgQ.DropObjectInstance( strSessionId );
   }

   while ( bDone == 0 && strActionToProcess.equals( "AddMarketingGroup" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "AddMarketingGroup", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StayOnWindowWithRefresh, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "UpdateTemplateStatement" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Position on the entity that was selected in the grid.
      String strEntityKey = (String) request.getParameter( "zTableRowSelect" );
      zeidon.zView mSPLDef = new zeidon.zView( strSessionId );
      nRC = mSPLDef.GetView( strSessionId, "mSPLDef", vAppSubtask );
      if ( nRC > 0 )
      {
         mSPLDef.SetCursorEntityKey( strSessionId, "DisplayTemplateStatement", strEntityKey );
      }

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "UpdateTemplateStatement", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "TemplatePanelDetail" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "GenerateHTML" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "GenerateHTML", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      // Next Window unknown

      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "ClearSelected" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Next Window unknown

      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "ESC" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "CancelUpdatePhysicalLabelDef", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_ReturnToParent, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "MarketingSections" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "SelectMarketingSections", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_ReturnToParent, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "MoveDirectionsSections" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "MoveDirectionsSections", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "MoveDirectionsForUseSections" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "ReselectTemplate" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Next Window
      strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "ReselectTemplate" );
      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "SaveSPLD" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "SaveSPLD", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_ReturnToParent, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "SelectAll" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Next Window unknown

      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "SelectMarketingSections" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "SelectMarketingSections", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "SelectMarketingSections" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "ShowDirectionsUsages" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "ShowDirectionsUsages", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "DirectionsUsageRemove" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "ShowMarketingUsages" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "ShowMarketingUsages", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "MarketingUsageRemove" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "ZEIDON_ComboBoxSubmit" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // No redirection, we are staying on this page.
      nRC = 0;
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smGenerateHTML" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "GenerateHTML", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      // Next Window unknown

      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smReselectTemplate" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Next Window
      strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "ReselectTemplate" );
      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smAddMarketingGroup" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "AddMarketingGroup", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StayOnWindowWithRefresh, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smSelectMarketingSections" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "SelectMarketingSections", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "SelectMarketingSections" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smMoveDirectionsSections" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "MoveDirectionsSections", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "MoveDirectionsForUseSections" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smShowDirectionsUsages" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "ShowDirectionsUsages", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "DirectionsUsageRemove" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smShowMarketingUsages" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "ShowMarketingUsages", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartModalSubwindow, "wSPLD", "MarketingUsageRemove" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smSaveSPLD" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "SaveSPLD", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_ReturnToParent, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "smESC" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "CancelUpdatePhysicalLabelDef", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_ReturnToParent, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mProductManagement" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "ProductManagement", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "wStartUp", "AdminListPrimaryRegistrants" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mSubregistrants" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "SubregistrantManagement", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "wStartUp", "AdminListSubregistrants" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mTrackingNotificationCompliance" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "TrackingNotificationCompliance", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mStateRegistrations" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "StateRegistrations", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mMarketingFulfillment" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "MarketingFulfillment", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mWebDevelopment" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "WebDevelopment", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "", "" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mAdministration" ) )
   {
      bDone = 1;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "PrimaryRegistrantCompanySetup", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "wStartUp", "AdminUpdatePrimaryRegistrant" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mLogin" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "ProcessLogin", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_ResetTopWindow, "wStartUp", "UserLogin" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "mTemplate" ) )
   {
      bDone = 1;

      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;

      // Action Operation
      nRC = 0;
      nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wStartUp", "Template", 0 );
      if ( nOptRC == 2 )
      {
         nRC = 2;  // do the "error" redirection
         break;
      }
      else
      if ( nOptRC == 1 )
      {
         // Dynamic Next Window
         strNextJSP_Name = vAppSubtask.GetWebRedirection( strSessionId );
      }

      if ( strNextJSP_Name.equals( "" ) )
      {
         // Next Window
         strNextJSP_Name = vAppSubtask.SetWebRedirection( strSessionId, vAppSubtask.zWAB_StartTopWindow, "wTemplD", "TemplateList" );
      }

      strURL = response.encodeRedirectURL( strNextJSP_Name );
      nRC = 1;  // do the redirection
      break;
   }

   while ( bDone == 0 && strActionToProcess.equals( "_OnUnload" ) )
   {
      bDone = 1;
      if ( vAppSubtask != null )
      {
         vAppSubtask.TraceLine( "OnUnload UnregisterZeidonApplication: ----------------------------------->>> ", "wSPLDTemplateStructure" );
         vAppSubtask.UnregisterZeidonApplication( strSessionId );
         vAppSubtask = null;
         session.setAttribute( "ZeidonSubtask", vAppSubtask );
      }

      // Next Window is HTML termination
      strURL = response.encodeRedirectURL( "logout.html" );
      response.sendRedirect( strURL );
      return;
   }

   while ( bDone == 0 && strActionToProcess.equals( "_OnTimeout" ) )
   {
      bDone = 1;
      if ( vAppSubtask != null )
      {
         vAppSubtask.TraceLine( "OnUnload UnregisterZeidonApplication: ----------------------------------->>> ", "wSPLDTemplateStructure" );
         vAppSubtask.UnregisterZeidonApplication( strSessionId );
         vAppSubtask = null;
         session.setAttribute( "ZeidonSubtask", vAppSubtask );
      }

      // Next Window is HTML termination
      strURL = response.encodeRedirectURL( "TimeOut.html" );
      response.sendRedirect( strURL );
      return;
   }

   while ( bDone == 0 && strActionToProcess.equals( "_OnResubmitPage" ) )
   {
      bDone = 1;
      // Input Mapping
      nRC = DoInputMapping( request, session, application );
      if ( nRC < 0 )
         break;
      strURL = response.encodeRedirectURL( "wSPLDTemplateStructure.jsp" );
      nRC = 1;  //do the redirection
      break;
   }

   if ( nRC != 0 )
   {
      if ( nRC > 0 )
      {
         if ( nRC > 1 )
         {
            strURL = response.encodeRedirectURL( "wSPLDTemplateStructure.jsp" );
            vAppSubtask.TraceLine( "Action Error Redirect to: ", strURL );
         }

         strActionToProcess = "";
         response.sendRedirect( strURL );
      }
      else
      {
         if ( nRC > -128 )
         {
            strActionToProcess = "";
            strURL = response.encodeRedirectURL( "wSPLDTemplateStructure.jsp" );
            response.sendRedirect( strURL );
            vAppSubtask.TraceLine( "Mapping Error Redirect to: ", strURL );
         }
         else
         {
            vAppSubtask.TraceLine( "InputMapping Reentry Prevented", "" );
         }
      }
   }

   if ( strActionToProcess.length( ) == 0 )
   {
   // vAppSubtask.GarbageCollectViews( strSessionId );
      return;
   }
}

if ( strErrorFlag != "Y" )
{
   nOptRC = vAppSubtask.CallDialogOperation( strSessionId, "wSPLD", "InitUpdateSPLD", 1 );
   if ( nOptRC <= -128 )
   {
      vAppSubtask.TraceLine( "Operation Reentry Prevented", "" );
      return;
   }

   if ( nOptRC == 2 )
   {
      zeidon.zView vView;
      String strMessage;
      String strURLParameters;

      vView = new zeidon.zView( strSessionId );
      nRC = vView.GetView( strSessionId, "wXferO", vAppSubtask );
      strMessage = vView.GetString( strSessionId, "Root", "WebReturnMessage" );
      strURLParameters = "?CallingPage=wSPLDTemplateStructure.jsp" +
                         "&Message=" + strMessage +
                         "&DialogName=" + "wSPLD" +
                         "&OperationName=" + "InitUpdateSPLD";
      strURL = response.encodeRedirectURL( "MessageDisplay.jsp" + strURLParameters );
      response.sendRedirect( strURL );
      vAppSubtask.TraceLine( "Pre/Post Redirect to: ", strURL );
      return;
   }

   nRC = vKZXMLPGO.SetCursorFirst( strSessionId, "DynamicBannerName", "DialogName", "wSPLD", "" );
   if ( nRC >= 0 )
      strBannerName = vKZXMLPGO.GetString( strSessionId, "DynamicBannerName", "BannerName" );

   if ( strBannerName == null || strBannerName == "" )
      strBannerName = "";
}

%>

<html>
<head>

<%@include file="myheader.inc" %>
<%@include file="timeout.inc" %>
<link rel="stylesheet" type="text/css" href="print.css" media="print" />
<script language="JavaScript" type="text/javascript" src="common.js"></script>
<script language="JavaScript" type="text/javascript" src="sort1.js"></script>
<script language="JavaScript1.1" type="text/javascript" src="sort2.js"></script>
<script language="JavaScript" type="text/javascript" src="validations.js"></script>
<script language="JavaScript" type="text/javascript" src="scw.js"></script>
<script language="JavaScript" type="text/javascript">

var timerID = null;
onerror = handleErr;
window.history.forward( 1 );

function handleErr( msg, url, l )
{
// Uncomment the following (invalid) line and put it in some function below to help find the error.
// document.replace("http://www.enc.edu/");

   var txt = "There was an error on this page.\n\n";
   txt += "Error: " + msg + "\n";
   txt += "URL: " + url + "\n";
   txt += "Line: " + l + "\n\n";
   txt += "Click OK to continue.\n\n";
   alert( txt );
   return true;
}

// This function returns Internet Explorer's major version number,
// or 0 for others. It works by finding the "MSIE " string and
// extracting the version number following the space, up to the decimal
// point, ignoring the minor version number.
function msieversion( )
{
   var ua = window.navigator.userAgent;
   var msie = ua.indexOf( "MSIE " );

   if ( msie > 0 )      // if Internet Explorer, return version number
      return parseInt( ua.substring( msie + 5, ua.indexOf( ".", msie ) ) );
   else                 // if another browser, return 0
      return 0;
}

function _OnAlmostTimeout()
{
   if ( _IsDocDisabled( ) == false )
   {
      var tStart   = new Date();

      alert("Your session will timeout in one minute.  Please click 'OK' within that time to continue and save your work if necessary.")

      var tEnd   = new Date();
      var tDiff = tEnd.getTime() - tStart.getTime();

      // If the time is less than one minute, resubmit the page.  Otherwise, go to the timeout window.
      if ( tDiff < 60000 )
      {
         document.wSPLDTemplateStructure.zAction.value = "_OnResubmitPage";
         document.wSPLDTemplateStructure.submit( );
      }
      else
      {
         _OnTimeout( );
      }
   }
}

function _OnTimeout( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "_OnTimeout";
      document.wSPLDTemplateStructure.submit( );
   }
}

function _BeforePageUnload( )
{
   if ( _IsDocDisabled( ) == false )
   {
      // No action needs to be taken here. This is just a place holder for traces.
      // alert( document.wFacultDAdviseeList.zAction.value );
   }
}

function _IsDocDisabled( )
{
   var theForm;
   var j;
   var k;

   for ( j = 0; j < document.forms.length; j++ )
   {
      theForm = document.forms[ j ];
      for ( k = 0; k < theForm.length; k++ )
      {
         if ( theForm.elements[ k ].name == "zDisable" )
            return theForm.elements[ k ].disabled;
      }
   }

   return false;
}

function _DisableFormElements( bDisabled )
{
   var theForm;
   var type;
   var lis;
   var thisLi;
   var j;
   var k;
   var bRC = false;

   if ( bDisabled && timerID != null )
   {
      clearTimeout( timerID );
      timerID = null;
   }

   for ( j = 0; j < document.forms.length; j++ )
   {
      theForm = document.forms[ j ];
      for ( k = 0; k < theForm.length; k++ )
      {
         type = theForm.elements[ k ].type;

         if ( type == "button" || type == "submit" || (type != null && type.indexOf( "select" ) == 0) )
         {
            theForm.elements[ k ].disabled = bDisabled;
         }
         else
         if ( theForm.elements[ k ].name == "zDisable" )
         {
            theForm.elements[ k ].disabled = bDisabled;
            bRC = true;
         }
      }
   }

   lis = document.getElementsByTagName( "li" );
   for ( k = 0; k < lis.length; k++ )
   {
      thisLi = lis[ k ];
      thisLi.disabled = bDisabled;
   }

   return bRC;
}

function _AfterPageLoaded( )
{
// _DisableFormElements( false );

   var szFocusCtrl = document.wSPLDTemplateStructure.zFocusCtrl.value;
   if ( szFocusCtrl != "" )
      eval('document.wSPLDTemplateStructure.' + szFocusCtrl + '.focus()');

   var keyRole = document.wSPLDTemplateStructure.zKeyRole.value;
   // Javascript code entered by user.
   // We knock out Login and Template as options.
   var thisLi;

   thisLi = document.getElementById( "lmTemplate" );
   thisLi.style.visibility = "hidden";
   thisLi.style.display = "none";
   thisLi = document.getElementById( "lmLogin" );
   thisLi.style.visibility = "hidden";
   thisLi.style.display = "none";

   if ( keyRole == "S" ) // if we are a Subregistrant
   {
      thisLi = document.getElementById( "lmSubregistrants" );
      thisLi.style.visibility = "hidden";
      thisLi.style.display = "none";
      thisLi = document.getElementById( "lmTrackingNotificationCompliance" );
      thisLi.style.visibility = "hidden";
      thisLi.style.display = "none";
    }
   else
   if ( keyRole == "P" ) // if we are a Primary Registrant
   {
      thisLi = document.getElementById( "lmStateRegistrations" );
      thisLi.style.visibility = "hidden";
      thisLi.style.display = "none";
   }

   // Cannot go to product management if already there.
   thisLi = document.getElementById( "lmProductManagement" );
   thisLi.disabled = true;
   // END of Javascript code entered by user.

   var szMsg = document.wSPLDTemplateStructure.zError.value;
   if ( szMsg != "" )
      alert( szMsg ); // "Houston ... We have a problem"

   szMsg = document.wSPLDTemplateStructure.zOpenFile.value;
   if ( szMsg != "" )
   {
      var NewWin = window.open( szMsg );
      NewWin.focus( );
   }

   document.wSPLDTemplateStructure.zError.value = "";
   document.wSPLDTemplateStructure.zOpenFile.value = "";

   if ( timerID != null )
   {
      clearTimeout( timerID );
      timerID = null;
   }

   var nTimeout = document.wSPLDTemplateStructure.zTimeout.value;
   if (nTimeout > 0)
   {
      var delay = 60000 * nTimeout;  // Timeout value in timeout.inc
      timerID = setTimeout( "_OnAlmostTimeout( )", delay );
   }
   else
      timerID = null; // No timeout specified
}

function CheckAllInGrid(id, CheckBoxName)
{
   var wcontrols = id.form.elements;
   var check = id.checked;
   var wcontrol, i = 0;

   while ( wcontrol = wcontrols[ i++ ] )
   {
      //Check to see if the checkbox belongs to this table then check it.
      if ( wcontrol.name.indexOf( CheckBoxName ) != -1 && wcontrol.type == 'checkbox' )
      {
         wcontrol.checked = check;
      }
   }
}

function AddMarketingGroup( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "AddMarketingGroup";
      document.wSPLDTemplateStructure.submit( );
   }
}

function UpdateTemplateStatement( strTagEntityKey )
{
   if ( _IsDocDisabled( ) == false )
   {
      var nIdx = strTagEntityKey.lastIndexOf( '::' );
      var strEntityKey = strTagEntityKey.substring( nIdx + 2 );

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zTableRowSelect.value = strEntityKey;
      document.wSPLDTemplateStructure.zAction.value = "UpdateTemplateStatement";
      document.wSPLDTemplateStructure.submit( );
   }
}

function GenerateHTML( )
{
   if ( _IsDocDisabled( ) == false )
   {
      // Javascript code entered by user.
// Generate HTML Script Here
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "GenerateHTML";
      document.wSPLDTemplateStructure.submit( );
   }
}

function InitUpdateSPLD( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "InitUpdateSPLD";
      document.wSPLDTemplateStructure.submit( );
   }
}

function ClearSelected( )
{
   if ( _IsDocDisabled( ) == false )
   {
      // Javascript code entered by user.
      var theForm;
      var type;
      var name;
      var str;
      var j;
      var k;

      for ( j = 0; j < document.forms.length; j++ )
      {
         theForm = document.forms[ j ];
         for ( k = 0; k < theForm.length; k++ )
         {
            type = theForm.elements[ k ].type;

            if ( type == "checkbox" )
            {
               name = theForm.elements[ k ].name;
               str = name.substr( 0, 3 );
               if ( str.match("ACS") )
               {
                  theForm.elements[ k ].checked = false;
               }
            }
         }
      }

      return;

      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "ClearSelected";
      document.wSPLDTemplateStructure.submit( );
   }
}

function ESC( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "ESC";
      document.wSPLDTemplateStructure.submit( );
   }
}

function MarketingSections( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "MarketingSections";
      document.wSPLDTemplateStructure.submit( );
   }
}

function MoveDirectionsSections( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "MoveDirectionsSections";
      document.wSPLDTemplateStructure.submit( );
   }
}

function ReselectTemplate( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "ReselectTemplate";
      document.wSPLDTemplateStructure.submit( );
   }
}

function SaveSPLD( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "SaveSPLD";
      document.wSPLDTemplateStructure.submit( );
   }
}

function SelectAll( )
{
   if ( _IsDocDisabled( ) == false )
   {
      // Javascript code entered by user.
      var theForm;
      var type;
      var name;
      var str;
      var j;
      var k;

      for ( j = 0; j < document.forms.length; j++ )
      {
         theForm = document.forms[ j ];
         for ( k = 0; k < theForm.length; k++ )
         {
            type = theForm.elements[ k ].type;

            if ( type == "checkbox" )
            {
               name = theForm.elements[ k ].name;
               str = name.substr( 0, 3 );
               if ( str.match("ACS") )
               {
                  theForm.elements[ k ].checked = true;
               }
            }
         }
      }

      return;

      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "SelectAll";
      document.wSPLDTemplateStructure.submit( );
   }
}

function SelectMarketingSections( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "SelectMarketingSections";
      document.wSPLDTemplateStructure.submit( );
   }
}

function ShowDirectionsUsages( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "ShowDirectionsUsages";
      document.wSPLDTemplateStructure.submit( );
   }
}

function ShowMarketingUsages( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "ShowMarketingUsages";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smGenerateHTML( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
// Generate HTML Script Here
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smGenerateHTML";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smReselectTemplate( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smReselectTemplate";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smAddMarketingGroup( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smAddMarketingGroup";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smSelectMarketingSections( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smSelectMarketingSections";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smMoveDirectionsSections( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smMoveDirectionsSections";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smShowDirectionsUsages( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smShowDirectionsUsages";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smShowMarketingUsages( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smShowMarketingUsages";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smSaveSPLD( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smSaveSPLD";
      document.wSPLDTemplateStructure.submit( );
   }
}

function smESC( )
{
   if ( _IsDocDisabled( ) == false )
   {
      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "smESC";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mProductManagement( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmProductManagement" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mProductManagement";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mSubregistrants( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmSubregistrants" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mSubregistrants";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mTrackingNotificationCompliance( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmTrackingNotificationCompliance" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mTrackingNotificationCompliance";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mStateRegistrations( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmStateRegistrations" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mStateRegistrations";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mMarketingFulfillment( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmMarketingFulfillment" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mMarketingFulfillment";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mWebDevelopment( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmWebDevelopment" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mWebDevelopment";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mAdministration( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmAdministration" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mAdministration";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mLogin( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmLogin" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mLogin";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mLogout( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmLogout" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "_OnUnload";
      document.wSPLDTemplateStructure.submit( );
   }
}

function mTemplate( )
{
   if ( _IsDocDisabled( ) == false )
   {

      // Javascript code entered by user.
   var thisLi = document.getElementById( "lmTemplate" );
   if ( thisLi.disabled == true )
      return;
      // END of Javascript code entered by user.

      _DisableFormElements( true );

      document.wSPLDTemplateStructure.zAction.value = "mTemplate";
      document.wSPLDTemplateStructure.submit( );
   }
}

</script>

</head>

<body onLoad="_AfterPageLoaded( )" onSubmit="_DisableFormElements( true )" onBeforeUnload="_BeforePageUnload( )">

<div id="wrapper">

<%@include file="topmenubeginning.inc" %>

<!-- Main Navigation *********************** -->
<div id="mainnavigation">
   <ul>
       <li id="lmProductManagement" name="lmProductManagement"><a href="#" onclick="mProductManagement()">Products</a></li>
       <li id="lmSubregistrants" name="lmSubregistrants"><a href="#" onclick="mSubregistrants()">Subregistrants</a></li>
       <li id="lmTrackingNotificationCompliance" name="lmTrackingNotificationCompliance"><a href="#" onclick="mTrackingNotificationCompliance()">Tracking/Notification/Compliance</a></li>
       <li id="lmStateRegistrations" name="lmStateRegistrations"><a href="#" onclick="mStateRegistrations()">State Registrations</a></li>
       <li id="lmMarketingFulfillment" name="lmMarketingFulfillment"><a href="#" onclick="mMarketingFulfillment()">Marketing/Fulfillment</a></li>
       <li id="lmWebDevelopment" name="lmWebDevelopment"><a href="#" onclick="mWebDevelopment()">Web Development</a></li>
       <li id="lmAdministration" name="lmAdministration"><a href="#" onclick="mAdministration()">Company Setup</a></li>
       <li id="lmLogin" name="lmLogin"><a href="#" onclick="mLogin()">Login</a></li>
       <li id="lmLogout" name="lmLogout"><a href="#" onclick="mLogout()">Logout</a></li>
       <li id="lmTemplate" name="lmTemplate"><a href="#" onclick="mTemplate()">Template</a></li>
   </ul>
</div>

<%@include file="topmenuend.inc" %>
<div id="maincontent">

<!-- Side Navigation *********************** -->
<div id="sidenavigation">
   <ul>
       <li><a href="#" onclick="smGenerateHTML()">Generate HTML</a></li>
       <li><a href="#" onclick="smReselectTemplate()">Reselect Template</a></li>
       <li><a href="#" onclick="smAddMarketingGroup()">Add Marketing Group</a></li>
       <li><a href="#" onclick="smSelectMarketingSections()">Add Marketing Sections</a></li>
       <li><a href="#" onclick="smMoveDirectionsSections()">Move Directions Sections</a></li>
       <li><a href="#" onclick="smShowDirectionsUsages()">Show/Update Directions Usages</a></li>
       <li><a href="#" onclick="smShowMarketingUsages()">Show/Update Marketing Usages</a></li>
       <li><a href="#" onclick="smSaveSPLD()">Save and Return</a></li>
       <li><a href="#" onclick="smESC()">Cancel and Return</a></li>
   </ul>
</div>

<div id="content">

<form name="wSPLDTemplateStructure" id="wSPLDTemplateStructure" method="post">
   <input name="zAction" id="zAction" type="hidden" value="NOVALUE">
   <input name="zTableRowSelect" id="zTableRowSelect" type="hidden" value="NOVALUE">
   <input name="zDisable" id="zDisable" type="hidden" value="NOVALUE">

<%
   strSessionId = session.getId( );
   zeidon.zView lPrimReg = new zeidon.zView( strSessionId );
   zeidon.zView mMasLC = new zeidon.zView( strSessionId );
   zeidon.zView mMasProd = new zeidon.zView( strSessionId );
   zeidon.zView mPrimReg = new zeidon.zView( strSessionId );
   zeidon.zView mSubLC = new zeidon.zView( strSessionId );
   zeidon.zView mSPLDef = new zeidon.zView( strSessionId );
   zeidon.zView lSPLDLST = new zeidon.zView( strSessionId );
   zeidon.zView mTempl = new zeidon.zView( strSessionId );
   zeidon.zView lTemplLST = new zeidon.zView( strSessionId );
   zeidon.zView lSubLCA = new zeidon.zView( strSessionId );
   zeidon.zView mSubProd = new zeidon.zView( strSessionId );
   zeidon.zView mSubreg = new zeidon.zView( strSessionId );
   zeidon.zView wMLCList = new zeidon.zView( strSessionId );
   zeidon.zView wWebXfer = new zeidon.zView( strSessionId );
   String strRadioGroupValue = "";
   String strComboCurrentValue = "";
   String strAutoComboBoxExternalValue;
   String strComboCountCurrentValue = "0";
   String strErrorColor = "";
   String strErrorMapValue = "";
   String strTextDisplayValue = "";
   String strTextURL_Value = "";
   int ComboCount = 0;
   int nRC2 = 0;
   nRC = 0;

   nRC2 = vKZXMLPGO.GetView( strSessionId, "KZXMLPGO", vAppSubtask );
   if ( nRC2 <= 0 )
   {
      vKZXMLPGO.InitWebSessionObject( strSessionId, vAppSubtask, "TestUserID" );
      vKZXMLPGO.SetName( strSessionId, "KZXMLPGO" );
   }

   nRC2 = vKZXMLPGO.InitWebPage( strSessionId, "wSPLD", "TemplateStructure" );

   // FindErrorFields Processing
   strError = vAppSubtask.FindErrorFields( strSessionId );
   nPos = strError.indexOf( "\t" );
   if ( nPos > 0 )
   {
      strErrorFlag = strError.substring( 0, 1 );
      strError = strError.substring( nPos + 1 );
   }

   if ( nPos >= 0 && strErrorFlag.equals( "Y" ) )
   {
      nPos = strError.indexOf( "\t\t" );
      if ( nPos >= 0 )
      {
         strErrorTitle = strError.substring( 0, nPos );
         strErrorMsg = strError.substring( nPos + 2 );
      }
   }

   strFocusCtrl = vAppSubtask.GetFocusCtrl( strSessionId, "wSPLD", "TemplateStructure" );
   strOpenFile = vAppSubtask.FindOpenFile( strSessionId );
   strDateFormat = vAppSubtask.GetDateDefaultContextFormat( strSessionId );
   nRC2 = wWebXfer.GetView( strSessionId, "wWebXfer", vAppSubtask );
   if ( nRC2 > 0 )
   {
      nRC2 = wWebXfer.CheckExistenceOfEntity( strSessionId, "Root" );
      if ( nRC2 >= 0 )
      {
         strKeyRole = wWebXfer.GetStringFromAttributeByContext( strSessionId, "Root", "KeyRole", "KeyRole", 254 );
         wWebXfer.TraceLine( "Root.KeyRole: ", strKeyRole );
      }
   }
%>

   <input name="zFocusCtrl" id="zFocusCtrl" type="hidden" value="<%=strFocusCtrl%>">
   <input name="zOpenFile" id="zOpenFile" type="hidden" value="<%=strOpenFile%>">
   <input name="zDateFormat" id="zDateFormat" type="hidden" value="<%=strDateFormat%>">
   <input name="zKeyRole" id="zKeyRole" type="hidden" value="<%=strKeyRole%>">
   <input name="zOpenPopupWindow" id="zOpenPopupWindow" type="hidden" value="<%=strOpenPopupWindow%>">
   <input name="zPopupWindowSZX" id="zPopupWindowSZX" type="hidden" value="<%=strPopupWindowSZX%>">
   <input name="zPopupWindowSZY" id="zPopupWindowSZY" type="hidden" value="<%=strPopupWindowSZY%>">
   <input name="zErrorFlag" id="zErrorFlag" type="hidden" value="<%=strErrorFlag%>">
   <input name="zTimeout" id="zTimeout" type="hidden" value="<%=nTimeout%>">

<% /* GroupBox2:GroupBox */ %>

<div style="width:740px;height:40px;position:absolute;left:18px;top:18px;">  <!-- GroupBox2 --> 

<% /* GroupBox1:GroupBox */ %>
<div style="float:left;width:740px;" >

<table cols=0 style="width:740px;" class="grouptable groupbox">

<tr>
<td  valign="top" style="width:116px;">
<% /* SPLD_Name::Text */ %>

<span style="width:114px;height:22px;position:absolute;left:0px;top:0px;">SPLD Name:</span>

</td>
<td  valign="top" style="width:296px;">
<% /* SPLD_Name:EditBox */ %>
<%
   strErrorMapValue = vAppSubtask.CheckError( strSessionId, "SPLD_Name", strErrorTitle );
   if ( strErrorMapValue.length( ) > 0 )
   {
      strErrorColor = "color: red;";
   }
   else
   {
      strErrorColor = "";
      nRC = mSPLDef.GetView( strSessionId, "mSPLDef", vAppSubtask );
      if ( nRC <= 0 )
         mSPLDef.TraceLine( "Invalid View: ", "SPLD_Name" );
      else
      {
         nRC = mSPLDef.CheckExistenceOfEntity( strSessionId, "SubregPhysicalLabelDef" );
         if ( nRC >= 0 )
         {
            strErrorMapValue = mSPLDef.GetStringFromAttributeByContext( strSessionId, "SubregPhysicalLabelDef", "Name", "", 254 );
            mSPLDef.TraceLine( "SubregPhysicalLabelDef.Name: ", strErrorMapValue );
         }
         else
            mSPLDef.TraceLine( "Entity does not exist: ", "mSPLDef.SubregPhysicalLabelDef" );
      }
   }
%>

<input name="SPLD_Name" id="SPLD_Name" style="width:238px;position:absolute;left:116px;top:0px;<%=strErrorColor%>" type="text" value="<%=strErrorMapValue%>" >

</td>
<td  valign="top" style="width:86px;">
<% /* TemplateName::Text */ %>

<span style="width:80px;height:24px;position:absolute;left:412px;top:0px;">Template:</span>

</td>
<td  valign="top" style="width:242px;">
<% /* TemplateName:Text */ %>
<% strTextDisplayValue = "";
   nRC = mSPLDef.GetView( strSessionId, "mSPLDef", vAppSubtask );
   if ( nRC <= 0 )
      mSPLDef.TraceLine( "Invalid View: ", "TemplateName" );
   else
   {
      nRC = mSPLDef.CheckExistenceOfEntity( strSessionId, "SPLD_Template" );
      if ( nRC >= 0 )
         strTextDisplayValue = mSPLDef.GetStringFromAttributeByContext( strSessionId, "SPLD_Template", "Name", "", 254 );
   }
%>

<span style="width:242px;height:24px;position:absolute;left:498px;top:0px;"><%=strTextDisplayValue%></span>

</td>
</tr>
</table>

</div>


</div>  <!--  GroupBox2 --> 
<% /* Grid:Grid */ %>
<% /* Grid:Grid */ %>

<div class="tableScroll"  style="position:absolute;top:2cm;left:18px;width:386px;height:700px;">

<table name="Grid" id="Grid" cellspacing=0  cols=2  >

<thead><tr>

   <th>Select</th>
   <th style="width:318px;">Label Text</th>

</tr></thead>

<tbody height="670px;">

<%
   nRC = mSPLDef.GetView( strSessionId, "mSPLDef", vAppSubtask );
   if ( nRC > 0 )
   {
      int    iTableRowCnt1 = 0;
      int    lEntityKey;
      String strEntityKey;
      String strButtonName;
      String strOdd;
      String strTag;
      String strSelect;
      String strSelectValue;
      String strGridEditCtl;
      
      zeidon.zView vGrid = new zeidon.zView( strSessionId );
      vGrid.CreateViewFromView( strSessionId, mSPLDef );
      nRC2 = vGrid.SetCursorFirst( strSessionId, "DisplayTemplateStatement", "" );
      while ( nRC2 >= 0 )
      {
         strOdd = (iTableRowCnt1 % 2) != 0 ? " class='odd'" : "";
         iTableRowCnt1++;

         lEntityKey = vGrid.GetEntityKey( strSessionId, "DisplayTemplateStatement" );
         strEntityKey = Integer.toString( lEntityKey );
         strButtonName = "SelectButton" + strEntityKey;

         strSelect = "";
         nRC = vGrid.CheckExistenceOfEntity( strSessionId, "DisplayTemplateStatement" );
         if ( nRC >= 0 )
            strSelect = vGrid.GetStringFromAttributeByContext( strSessionId, "DisplayTemplateStatement", "wSelected", "", 254 );

         if ( strSelect.equals( "Y" ) )
         {
            strSelectValue = "Select" + strEntityKey;
            strSelect = "<input name='" + strSelectValue + "' id='" + strSelectValue + "' value='Y' type='checkbox'  CHECKED > ";
         }
         else
         {
            strSelectValue = "Select" + strEntityKey;
            strSelect = "<input name='" + strSelectValue + "' id='" + strSelectValue + "' value='Y' type='checkbox' > ";
         }

         strGridEditCtl = "";
         nRC = vGrid.CheckExistenceOfEntity( strSessionId, "DisplayTemplateStatement" );
         if ( nRC >= 0 )
            strGridEditCtl = vGrid.GetStringFromAttributeByContext( strSessionId, "DisplayTemplateStatement", "DisplayText", "", 254 );

         if ( strGridEditCtl.length( ) == 0 )
            strGridEditCtl = "&nbsp";

%>

<tr<%=strOdd%>>

   <td nowrap><%=strSelect%></td>
   <td nowrap style="width:318px;"><a href="#" onclick="UpdateTemplateStatement( this.id )" id="GridEditCtl::<%=strEntityKey%>"><%=strGridEditCtl%></a>

</tr>

<%
         nRC2 = vGrid.SetCursorNext( strSessionId, "DisplayTemplateStatement", "" );
      }
      nRC2 = vGrid.DropView( strSessionId );
   }
%>
</tbody>
</table>

</div>

<% /* GroupBox3:GroupBox */ %>

<div style="width:386px;height:720px;position:absolute;left:444px;top:68px;">  <!-- GroupBox3 --> 


</div>  <!--  GroupBox3 --> 

<%
   if ( strErrorFlag.equals( "D" ) )
   {
      nPos = strError.indexOf( "\t" );
      if ( nPos >= 0 )
      {
         strErrorTitle = strError.substring( 0, nPos );
         nPos = strError.indexOf( "\t\t" );
         strErrorMsg = strError.substring( nPos + 2 );
      }
   }

%>

   <input name="zError" id="zError" type="hidden" value="<%=strErrorMsg%>">

</form>
</div>   <!-- This is the end tag for the div 'content' -->

</div>   <!-- This is the end tag for the div 'maincontent' -->

<%
   String strHTML_FileName = mSPLDef.MakeWebFileName( strSessionId, 0 ) + ".html";
   mSPLDef.TraceLine( "HTML FileName: ", strHTML_FileName );
%>
       <iframe id="FrameHTML" src="<%=strHTML_FileName%>" frameborder="1" width="386px" style="height:736px; margin-left:500px; margin-top:2cm"></iframe>

<%@include file="footer.inc" %>

</div>  <!-- This is the end tag for wrapper -->

</body>
</html>
